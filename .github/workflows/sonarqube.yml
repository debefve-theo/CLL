name: SonarQube Analysis

on:
  push:
    branches:
      - main
      - 'release/**'
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  sonar:
    name: SonarQube Scan & Quality Gate
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: App_CLL_Livreur

    env:
      SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      SONAR_TOKEN:    ${{ secrets.SONAR_TOKEN }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Make gradlew executable
        run: chmod +x gradlew

      - name: Build, Lint & Assemble
        run: ./gradlew clean lintDebug assembleDebug

      - name: SonarQube Scan & Quality Gate
        uses: sonarsource/sonarqube-scan-action@v5
        with:
          projectBaseDir: App_CLL_Livreur/app
          args: >
            -Dsonar.projectKey=CLL
            -Dsonar.projectName=CLL
            -Dsonar.sources=src/main/java
            -Dsonar.java.binaries=build/intermediates/javac/debug/compileDebugJavaWithJavac
        env:
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_TOKEN:    ${{ secrets.SONAR_TOKEN }}
